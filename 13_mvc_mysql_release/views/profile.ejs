<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>회원 정보</title>
    <!-- axios -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  </head>
  <body>
    <h1>회원 정보</h1>
    <!-- TODO: href 속성값 설정하기 -->
    <a href="/user">HOME</a>
    <p>ID 수정 불가능, Password, Name 수정 가능</p>

    <!-- TODO: 각 input의 value 값을 로그인 한 사람의 정보로 채우기 -->
    <form name="form_profile">
      <label for="userid">ID</label>
      <input type="hidden" id="id" value="<% data.id %>" />
      <!-- readonly: userid는 수정 불가능 (조건임) -->
      <input
        id="userid"
        type="text"
        name="userid"
        value="<% data.userid %>"
        readonly
      /><br />
      <label for="password">Password</label>
      <input
        id="password"
        type="password"
        name="pw"
        value="<% data.pw %>"
        required
      /><br />
      <label for="name">Name</label>
      <input
        id="name"
        type="text"
        name="name"
        value="<% data.name %>"
        required
      /><br />
      <button type="button" onclick="profileEdit();">Edit</button>
      <button type="button" onclick="profileDelete();">Delete</button>
    </form>

    <script>
      // TODO: [Login] 버튼 클릭시 서버에 회원 정보 수정 요청하기
      // POST /user/profile/edit
      function profileEdit() {
        const form = document.forms['form_profile'];

        if(!form.checkValidity()){
          form.reportValidity();
          return
        }
        axios({
          method: 'POST',
          url: '/user/progile/edit',
          data: {
            id: form.id.value,
            userid: form.userid.value,
            id: form.pw.value,
            name: form.name.value,
          }
        })
        .then((res)=>{
          return res.data;
        })
        .then((data)=>{
          alert('수정 성공')
        })
      }

      // TODO: [Login] 버튼 클릭시 서버에 회원 정보 삭제 요청하기
      // POST /user/profile/delete
      function profileDelete() {
        const form = document.forms['form_profile'];

        if(!form.checkValidity()){
          form.reportValidity();
          return
        }

        axios({
          method: 'POST',
          url: '/user/progile/delte',
          data:{
            id:form.id.value
          }
        }).then((res)=>{
          console.log('1delete >> ', res);
          return res.data
        }).then((data)=>{
          console.log('2delete >> ', data);
          alert('회원 탈퇴 성공');

          document.location.href='/user'
        })
      }
    </script>
  </body>
</html>
