<!DOCTYPE html>
<html lang="ko">
  <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>로그인</title>
    <!-- axios -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <body>
    <h1>로그인</h1>
    <!-- 
      [로그인] 버튼을 클릭하면 profile.ejs에서 특정 유저 정보를 보여주어야 하기 때문에 
      userid 정보를 value에 저장(POST /user/signin 요청의 응답을 받은 후 수행)하여
      폼(input)이 보이지 않도록 hidden 처리함
    -->
    <form name="form_info" action="/user/profile" method="POST">
      <input type="hidden" name="userid" />
    </form>

    <form name="form_login">
      <label for="userid">ID</label>
      <input id="userid" type="text" name="userid" required /><br />
      <label for="password">Password</label>
      <input id="password" type="password" name="pw" required /><br />
      <button type="button" onclick="login();">Login</button>
    </form>

    <!-- TODO: href 속성값 설정하기 -->
    <a href="/user/signup">Register</a>

    <script>
      // TODO: [Login] 버튼 클릭시 서버에 로그인 요청하기
      // POST /user/signin
      function login() {
        const form_login = document.forms['form_login'];

        if(!form_login.checkValidity()){
          form_login,reportValidity();
          return;
        }

        axios({
          mmethod: 'POST',
          url: '/uesr/signin',
          data: {
            userid: form_login.userid.value,
            pw: form_login.pw.value,
          },
        }).then((res)=>{
          return res.data
        }).then((data)=>{
          console.log('post profile >> ', data);
          if(data){
            alert('로그인 성공');   

            const form_info = document['form_info'];
            form_info.userid.value = form_login.userid.value
            form_info.submit()
          }else{
            alert('로그인 실패');

            form_login.reset();
          }
        })

      }
    </script>
  </body>
</html>
